current_path              = "<%= current_path %>"
shared_path               = "<%= shared_path %>"
shared_bundler_gems_path  = "<%= shared_path.join('bundle') %>"

worker_processes 4
working_directory current_path
listen "<%= fetch(:webserver_socket_path) %>/unicorn.socket", :backlog => 64
timeout 300
pid "<%= fetch(:webserver_socket_path) %>/unicorn.pid"

stderr_path "#{shared_path}/log/unicorn.stderr.log"
stdout_path "#{shared_path}/log/unicorn.stdout.log"

preload_app true
GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!
end

after_fork do |server, worker|
  worker.user('<%= fetch(:webserver_username) %>', '<%= fetch(:webserver_username) %>') if Process.euid == 0

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end

before_exec do |server|
  # Configure bundler to use proper paths if app provides a Gemfile
  if(File.exists?("#{current_path}/Gemfile"))
    paths = ENV["PATH"].to_s.split(':')
    paths.unshift "#{shared_bundler_gems_path}/bin"
    ENV["PATH"] = paths.uniq.join(':')

    ENV['GEM_HOME'] = ENV['GEM_PATH'] = shared_bundler_gems_path
    ENV['BUNDLE_GEMFILE'] = "#{current_path}/Gemfile"
  end
end
